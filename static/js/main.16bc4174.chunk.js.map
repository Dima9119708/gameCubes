{"version":3,"sources":["emitter/emmiter.tsx","components/GameBlock/GameBlock.components/ButtonNewGame.tsx","components/GameBlock/GameBlock.components/ButtonStartPause.tsx","utils/utils.tsx","components/GameBlock/GameBlock.components/MainGameBlock.tsx","components/GameBlock/GameBlock.components/Points.tsx","components/GameBlock/GameBlock.components/Time.tsx","components/GameBlock/GameBlock.components/Modal.tsx","components/GameBlock/GameBlock.tsx","components/ResultBlock/Result.tsx","App.tsx","index.tsx"],"names":["emitter","Emitter","ButtonNewGame","onClick","emit","style","fontSize","height","type","ButtonStartPause","React","useState","activeBtn","setBtn","useEffect","on","boolean","handleClick","value","e","display","marginRight","danger","CSS_COLOR_NAMES","colorsOfTheirGlasses","2","4","6","10","blocksHeight","createBlock","Array","gameBlocks","fill","randomIndex","elements","i","elementsRandom","push","Math","floor","random","length","localStorage","key","JSON","parse","window","getItem","setItem","stringify","MainGameBlock","overlay","setOverlay","randIdx","setIndex","slice","randHeight","setRandHeight","randIDX","block","target","getBG","backgroundColor","Object","entries","score","includes","getHeight","split","position","overflow","className","map","_","color","width","border","margin","Points","setScore","prevState","time","startMinute","minutes","seconds","startTime","interval","Time","currentTime","setTime","timer","setInterval","clearInterval","Modal","open","setOpen","$input","useRef","listener","aria-labelledby","DialogTitle","id","DialogContent","TextField","inputRef","autoFocus","label","fullWidth","DialogActions","inputValue","current","getTable","name","GameBlock","Result","getUsers","setUsers","users","paddingTop","item","index","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16bc4174.chunk.js","sourcesContent":["import Emitter from 'events'\r\n\r\nexport const emitter = new Emitter()","import { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport {emitter} from \"../../../emitter/emmiter\";\r\n\r\nexport const ButtonNewGame = () => {\r\n\r\n    const handleClick = () => {\r\n        emitter.emit('START', false)\r\n        emitter.emit('SCORE', 'reset')\r\n        emitter.emit('TIMER', 'reset')\r\n        emitter.emit('RANDOM_ELEM', true)\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            onClick={handleClick}\r\n            style={{\r\n                fontSize : 20,\r\n                height : 40\r\n            }}\r\n            type=\"default\"\r\n        >\r\n            New Game\r\n        </Button>\r\n    )\r\n}","import { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport {emitter} from \"../../../emitter/emmiter\";\r\n\r\nexport const ButtonStartPause = () => {\r\n\r\n    const [activeBtn, setBtn] = React.useState(true)\r\n\r\n\r\n    React.useEffect(() => {\r\n        emitter.on('START', boolean => setBtn(boolean))\r\n    }, [])\r\n\r\n\r\n    const handleClick = (value : string) => {\r\n\r\n        if (value === 'start') {\r\n\r\n            setBtn(false)\r\n            emitter.emit('START', false)\r\n            emitter.emit('TIMER', 'start')\r\n\r\n        }\r\n        else {\r\n\r\n            setBtn(true)\r\n            emitter.emit('START', true)\r\n            emitter.emit('TIMER', 'pause')\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (<>\r\n        <Button\r\n            onClick={e => handleClick('start')}\r\n            style={{\r\n                display : activeBtn ? 'inline-block' : 'none',\r\n                marginRight : 20,\r\n                fontSize : 20,\r\n                height : 40\r\n            }}\r\n            type=\"primary\"\r\n        >\r\n            Start\r\n        </Button>\r\n\r\n        <Button\r\n            onClick={e => handleClick('pause')}\r\n            style={{\r\n                display : !activeBtn ? 'inline-block' : 'none',\r\n                marginRight : 20,\r\n                fontSize : 20,\r\n                height : 40\r\n            }}\r\n            danger\r\n        >\r\n            Pause\r\n        </Button>\r\n    </>)\r\n}","import {elementsRandom, gameBlocks} from \"../components/GameBlock/GameBlock.components/MainGameBlock\";\r\n\r\nexport const CSS_COLOR_NAMES = [\r\n    \"AliceBlue\",\r\n    \"AntiqueWhite\",\r\n    \"Aqua\",\r\n    \"Aquamarine\",\r\n    \"Azure\",\r\n    \"Beige\",\r\n    \"Bisque\",\r\n    \"Black\",\r\n    \"BlanchedAlmond\",\r\n    \"Blue\",\r\n    \"BlueViolet\",\r\n    \"Brown\",\r\n    \"BurlyWood\",\r\n    \"CadetBlue\",\r\n    \"Chartreuse\",\r\n    \"Chocolate\",\r\n    \"Coral\",\r\n    \"CornflowerBlue\",\r\n    \"Cornsilk\",\r\n    \"Crimson\",\r\n    \"Cyan\",\r\n    \"DarkBlue\",\r\n    \"DarkCyan\",\r\n    \"DarkGoldenRod\",\r\n    \"DarkGray\",\r\n    \"DarkGrey\",\r\n    \"DarkGreen\",\r\n    \"DarkKhaki\",\r\n    \"DarkMagenta\",\r\n    \"DarkOliveGreen\",\r\n    \"DarkOrange\",\r\n    \"DarkOrchid\",\r\n    \"DarkRed\",\r\n    \"DarkSalmon\",\r\n    \"DarkSeaGreen\",\r\n    \"DarkSlateBlue\",\r\n    \"DarkSlateGray\",\r\n    \"DarkSlateGrey\",\r\n    \"DarkTurquoise\",\r\n    \"DarkViolet\",\r\n    \"DeepPink\",\r\n    \"DeepSkyBlue\",\r\n    \"DimGray\",\r\n    \"DimGrey\",\r\n    \"DodgerBlue\",\r\n    \"FireBrick\",\r\n    \"FloralWhite\",\r\n    \"ForestGreen\",\r\n    \"Fuchsia\",\r\n    \"Gainsboro\",\r\n    \"GhostWhite\",\r\n    \"Gold\",\r\n    \"GoldenRod\",\r\n    \"Gray\",\r\n    \"Grey\",\r\n    \"Green\",\r\n    \"GreenYellow\",\r\n    \"HoneyDew\",\r\n    \"HotPink\",\r\n    \"IndianRed\",\r\n    \"Indigo\",\r\n    \"Ivory\",\r\n    \"Khaki\",\r\n    \"Lavender\",\r\n    \"LavenderBlush\",\r\n    \"LawnGreen\",\r\n    \"LemonChiffon\",\r\n    \"LightBlue\",\r\n    \"LightCoral\",\r\n    \"LightCyan\",\r\n    \"LightGoldenRodYellow\",\r\n    \"LightGray\",\r\n    \"LightGrey\",\r\n    \"LightGreen\",\r\n    \"LightPink\",\r\n    \"LightSalmon\",\r\n    \"LightSeaGreen\",\r\n    \"LightSkyBlue\",\r\n    \"LightSlateGray\",\r\n    \"LightSlateGrey\",\r\n    \"LightSteelBlue\",\r\n    \"LightYellow\",\r\n    \"Lime\",\r\n    \"LimeGreen\",\r\n    \"Linen\",\r\n    \"Magenta\",\r\n    \"Maroon\",\r\n    \"MediumAquaMarine\",\r\n    \"MediumBlue\",\r\n    \"MediumOrchid\",\r\n    \"MediumPurple\",\r\n    \"MediumSeaGreen\",\r\n    \"MediumSlateBlue\",\r\n    \"MediumSpringGreen\",\r\n    \"MediumTurquoise\",\r\n    \"MediumVioletRed\",\r\n    \"MidnightBlue\",\r\n    \"MintCream\",\r\n    \"MistyRose\",\r\n    \"Moccasin\",\r\n    \"NavajoWhite\",\r\n    \"Navy\",\r\n    \"OldLace\",\r\n    \"Olive\",\r\n    \"OliveDrab\",\r\n    \"Orange\",\r\n    \"OrangeRed\",\r\n    \"Orchid\",\r\n    \"PaleGoldenRod\",\r\n    \"PaleGreen\",\r\n    \"PaleTurquoise\",\r\n    \"PaleVioletRed\",\r\n    \"PapayaWhip\",\r\n    \"PeachPuff\",\r\n    \"Peru\",\r\n    \"Pink\",\r\n    \"Plum\",\r\n    \"PowderBlue\",\r\n    \"Purple\",\r\n    \"RebeccaPurple\",\r\n    \"Red\",\r\n    \"RosyBrown\",\r\n    \"RoyalBlue\",\r\n    \"SaddleBrown\",\r\n    \"Salmon\",\r\n    \"SandyBrown\",\r\n    \"SeaGreen\",\r\n    \"SeaShell\",\r\n    \"Sienna\",\r\n    \"Silver\",\r\n    \"SkyBlue\",\r\n    \"SlateBlue\",\r\n    \"SlateGray\",\r\n    \"SlateGrey\",\r\n    \"Snow\",\r\n    \"SpringGreen\",\r\n    \"SteelBlue\",\r\n    \"Tan\",\r\n    \"Teal\",\r\n    \"Thistle\",\r\n    \"Tomato\",\r\n    \"Turquoise\",\r\n    \"Violet\",\r\n    \"WhiteSmoke\",\r\n    \"Yellow\",\r\n    \"YellowGreen\",\r\n];\r\n\r\nexport const colorsOfTheirGlasses = {\r\n    2 : [\r\n        \"paleturquoise\",\r\n        \"palevioletred\",\r\n        \"papayawhip\",\r\n        \"peachpuff\",\r\n        \"peru\",\r\n        \"pink\",\r\n        \"plum\",\r\n        \"powderblue\",\r\n        \"purple\",\r\n        \"rebeccapurple\",\r\n        \"red\",\r\n        \"tan\",\r\n        \"teal\",\r\n        \"thistle\",\r\n        \"tomato\",\r\n        \"turquoise\",\r\n        \"violet\",\r\n        \"whitesmoke\",\r\n        \"yellow\",\r\n        \"yellowgreen\",\r\n    ],\r\n\r\n    4 : [\r\n        \"oldlace\",\r\n        \"olive\",\r\n        \"olivedrab\",\r\n        \"orange\",\r\n    ],\r\n\r\n    6 : [\r\n        \"aliceblue\",\r\n        \"antiquewhite\",\r\n        \"aqua\",\r\n    ],\r\n\r\n    10 : [\r\n        \"gold\",\r\n    ]\r\n}\r\n\r\nexport const blocksHeight = [10,20,30]\r\n\r\nexport const createBlock = () : Array<string> => {\r\n    return new Array(gameBlocks).fill('')\r\n}\r\n\r\nexport const randomIndex = () => {\r\n\r\n    const randomIndex = []\r\n    const elements = createBlock()\r\n\r\n    for( let i = 0; i < elementsRandom; i++ ) {\r\n        randomIndex.push( Math.floor(Math.random() * elements.length) )\r\n    }\r\n\r\n    return randomIndex\r\n}\r\n\r\nexport const localStorage = (key : string, value? : any) => {\r\n\r\n    if (value) {\r\n        window.localStorage.setItem(key, JSON.stringify(value))\r\n        return\r\n    }\r\n\r\n    return JSON.parse(window.localStorage.getItem(key)!)\r\n}\r\n","import React from \"react\";\r\nimport {blocksHeight, colorsOfTheirGlasses, createBlock, CSS_COLOR_NAMES, randomIndex } from \"../../../utils/utils\";\r\nimport {emitter} from \"../../../emitter/emmiter\";\r\n\r\n\r\nconst gameHeight = 530\r\nexport const gameBlocks = 135\r\nconst blockHeight = 50\r\nexport const elementsRandom = 16\r\n\r\nexport const MainGameBlock = () => {\r\n\r\n    const [overlay, setOverlay] = React.useState(true)\r\n    const [randIdx, setIndex] = React.useState(randomIndex())\r\n    const [randHeight, setRandHeight] = React.useState(randIdx.slice(0, 4))\r\n\r\n\r\n    React.useEffect(() => {\r\n        emitter.on('START', boolean => setOverlay(boolean))\r\n        emitter.on('RANDOM_ELEM', () => {\r\n            const randIDX = randomIndex()\r\n            setIndex(randIDX)\r\n            setRandHeight(randIDX.slice(0, 3))\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleClick = (e: React.MouseEvent) => {\r\n\r\n        const block = e.target as HTMLDivElement\r\n        const getBG = block.style.backgroundColor\r\n\r\n        if (getBG) {\r\n            const randIDX = randomIndex()\r\n            setIndex(randIDX)\r\n            setRandHeight(randIDX.slice(0, 3))\r\n\r\n            //  кубики разных цветов приносят разное количество очков\r\n            for (const [score, colors] of Object.entries(colorsOfTheirGlasses)) {\r\n                if (colors.includes(getBG)) {\r\n                    emitter.emit('SCORE', +score)\r\n                }\r\n            }\r\n\r\n            // кубики меньшего размера приносят больше очков\r\n            const getHeight = +block.style.height.split('px')[0]\r\n            if (getHeight === 30) {\r\n                emitter.emit('SCORE', 3)\r\n            }\r\n            else if(getHeight === 20) {\r\n                emitter.emit('SCORE', 6)\r\n            }\r\n            else if(getHeight === 10) {\r\n                emitter.emit('SCORE', 12)\r\n            }\r\n\r\n            emitter.emit('SCORE', 1)\r\n        }\r\n        else {\r\n            if (!overlay) {\r\n                emitter.emit('SCORE', -1)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={handleClick}\r\n            style={{\r\n                position : 'relative',\r\n                height : gameHeight,\r\n                overflow : 'hidden'\r\n            }}\r\n        >\r\n            <div\r\n                className=\"game__overlay\"\r\n                style={{ display : overlay ? 'flex' : 'none' }}\r\n            >\r\n                Нажмите на кнопку START\r\n            </div>\r\n\r\n            {\r\n                createBlock()\r\n                    .map( (_,i) => {\r\n\r\n                        const color = Math.floor(Math.random() * CSS_COLOR_NAMES.length)\r\n                        const height = Math.floor(Math.random() * blocksHeight.length)\r\n\r\n                        return (\r\n\r\n                            <div\r\n                                key={i + _}\r\n                                style={{\r\n                                    display : \"inline-block\",\r\n                                    height : randHeight.includes(i) ? blocksHeight[height] : blockHeight,\r\n                                    width: randHeight.includes(i) ? blocksHeight[height] : blockHeight,\r\n                                    border : '2px solid #000',\r\n                                    backgroundColor : randIdx.includes(i)\r\n                                                      ? CSS_COLOR_NAMES[color]\r\n                                                      : '',\r\n                                    margin : 2\r\n                                }}\r\n                            >\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport {emitter} from \"../../../emitter/emmiter\";\r\n\r\nexport const Points = () => {\r\n\r\n    const [score , setScore] = React.useState(0)\r\n\r\n    React.useEffect(() => {\r\n\r\n       emitter.on('SCORE', value => {\r\n\r\n           if(value === 'reset') {\r\n\r\n               setScore(prevState => {\r\n                   emitter.emit('SCORE__RESULT', prevState)\r\n                   return 0\r\n               })\r\n\r\n           }\r\n           else {\r\n\r\n               setScore(prevState => prevState + value)\r\n\r\n           }\r\n\r\n       })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"game__toolbar-minTitle\">Points</div>\r\n            <div className=\"game__toolbar-block\">{score}</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {emitter} from \"../../../emitter/emmiter\";\r\n\r\n\r\nconst startMinute = 1\r\nlet time = startMinute * 60\r\n\r\nconst minutes = Math.floor(time / 60)\r\nconst seconds = time % 60\r\n\r\nlet startTime = `${minutes}:${seconds}`\r\nif (minutes < 10 && seconds < 10) startTime = `0${minutes}:0${seconds}`\r\n\r\nlet interval : any = null\r\n\r\nexport const Time = () => {\r\n\r\n    const [currentTime, setTime] = React.useState(startTime)\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n        const timer = () => {\r\n\r\n            const minutes = Math.floor(time / 60)\r\n            const seconds = time % 60\r\n\r\n            if (minutes < 10)                 setTime(`0${minutes}:${seconds}`)\r\n            if (minutes < 10 && seconds < 10) setTime(`0${minutes}:0${seconds}`)\r\n\r\n            time--\r\n\r\n            return () => {\r\n\r\n                const minutes = Math.floor(time / 60)\r\n                const seconds = time % 60\r\n\r\n                if (minutes < 10)                 setTime(`0${minutes}:${seconds}`)\r\n                if (minutes < 10 && seconds < 10) setTime(`0${minutes}:0${seconds}`)\r\n\r\n                time--\r\n            }\r\n        }\r\n\r\n        emitter.on('TIMER', value => {\r\n\r\n            if (value === 'start') {\r\n                interval = setInterval(timer(), 1000)\r\n            }\r\n            else if (value === 'reset') {\r\n                clearInterval(interval)\r\n                time = startMinute * 60\r\n                interval = setInterval(timer(), 1000)\r\n            }\r\n            else {\r\n                clearInterval(interval)\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (currentTime === '00:00') {\r\n\r\n            clearInterval(interval)\r\n\r\n            emitter.emit('START', true)\r\n            emitter.emit('MODAL', true)\r\n            emitter.emit('SCORE', 'reset')\r\n            emitter.emit('RANDOM_ELEM', true)\r\n\r\n            time = startMinute * 60\r\n            setTime(startTime)\r\n\r\n        }\r\n    }, [currentTime])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"game__toolbar-minTitle\">Time</div>\r\n            <div className=\"game__toolbar-block\"> { currentTime } </div>\r\n       </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {DialogActions, DialogContent, TextField} from \"@material-ui/core\";\r\nimport {Button} from \"antd\";\r\nimport {emitter} from \"../../../emitter/emmiter\";\r\nimport {localStorage} from \"../../../utils/utils\";\r\n\r\nexport const Modal = () => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [score, setScore] = React.useState(0)\r\n    const $input = React.useRef<HTMLInputElement>(null)\r\n\r\n    React.useEffect(() => {\r\n\r\n        emitter.on('MODAL', listener => setOpen(listener))\r\n        emitter.on('SCORE__RESULT', listener => setScore(listener))\r\n\r\n    }, [])\r\n\r\n\r\n    const handleSaveName = () => {\r\n        const inputValue = $input.current!.value\r\n        const getTable = localStorage('gameCube')\r\n                         ? localStorage('gameCube')\r\n                         : []\r\n\r\n        if (!inputValue) {\r\n            getTable.push({ name : 'NoName', score})\r\n            localStorage('gameCube', getTable)\r\n        }\r\n        else {\r\n            getTable.push({ name : inputValue, score})\r\n            localStorage('gameCube', getTable)\r\n        }\r\n\r\n        emitter.emit('RESULT', getTable)\r\n\r\n        setOpen(false)\r\n    };\r\n\r\n    const handleClose = () => setOpen(false)\r\n\r\n    return (\r\n        <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Your score: {score}</DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    inputRef={$input}\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    fullWidth/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button onClick={handleSaveName} color=\"primary\">\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React from \"react\";\r\nimport { ButtonNewGame } from \"./GameBlock.components/ButtonNewGame\";\r\nimport { ButtonStartPause } from \"./GameBlock.components/ButtonStartPause\";\r\nimport { MainGameBlock } from \"./GameBlock.components/MainGameBlock\";\r\nimport { Points } from \"./GameBlock.components/Points\";\r\nimport { Time } from \"./GameBlock.components/Time\";\r\nimport {Modal} from \"./GameBlock.components/Modal\";\r\n\r\n\r\nexport const GameBlock = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"game__left-block\">\r\n\r\n                <header>\r\n                    <h1>Game Cube</h1>\r\n                </header>\r\n\r\n                <div className=\"game__toolbar\">\r\n\r\n                    <div>\r\n                        <ButtonStartPause/>\r\n                        <ButtonNewGame/>\r\n                    </div>\r\n\r\n                    <Points/>\r\n\r\n                    <Time/>\r\n                </div>\r\n\r\n                <MainGameBlock/>\r\n            </div>\r\n\r\n            <Modal />\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {localStorage} from \"../../utils/utils\";\r\nimport {emitter} from \"../../emitter/emmiter\";\r\n\r\nexport const Result = () => {\r\n\r\n    const [getUsers, setUsers] = React.useState( localStorage('gameCube')\r\n                                                          ? localStorage('gameCube')\r\n                                                          : [])\r\n    React.useEffect(() => {\r\n        emitter.on('RESULT', users => setUsers(users))\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ paddingTop : 144 }}\r\n        >\r\n            <div className=\"game__result\">\r\n                <h3 className=\"game__result-title\">Result</h3>\r\n\r\n                {\r\n                    getUsers.map( ( item : { name : string, score : number } , index : number) => {\r\n                        return (\r\n                            <div\r\n                                key={item.name + index}\r\n                                className=\"game__result-user\"\r\n                            >\r\n                                <div className=\"game__result-user-name\">{item.name}</div>\r\n                                <div className=\"game__result-user-score\">{item.score}</div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { GameBlock } from './components/GameBlock/GameBlock';\nimport { Result } from './components/ResultBlock/Result';\n\n\nfunction App() {\n  return (\n    <div className=\"game\">\n        <GameBlock />\n        <Result />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}